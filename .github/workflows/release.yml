name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.21
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --skip=publish --config .goreleaser-build.yaml --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: builder-build
          path: |
            dist/builder*.tar.gz
            dist/builder*.txt

  release:
    needs: build-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.21
      - name: Make directories
        run: |
          mkdir -p ./release
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: builder-build
          path: ./release
      - name: Merge checksum file
        run: |
          cd ./release
          ls -al
          cat ./builder*checksums.txt >> checksums.txt
          rm ./builder*checksums.txt
      - name: Release
        uses: goreleaser/goreleaser-action@v4
        with:
          args: release --config .goreleaser-release.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # deploy-holesky:
  #   needs: release
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #         repository: ManInWeb3/flashbots-builders-iac
  #         path: iac
  #     - name: Fetch all tags
  #       run: git fetch --force --tags
  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v3
  #       with:
  #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
  #     - name: Terraform Init
  #       run: terraform init
  #     - name: Terraform Format
  #       run: terraform fmt -check
  #     - name: Terraform Plan
  #       run: terraform plan
  #     - name: Terraform Apply
  #       if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #       run: terraform apply -auto-approve


